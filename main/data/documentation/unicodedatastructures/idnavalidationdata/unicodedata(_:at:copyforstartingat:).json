{"abstract":[{"type":"text","text":"(Optional) Returns a copy of the given non-ASCII data, adjusted to apply to a different start location."}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/unicodeData(_:at:copyForStartingAt:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/CodePointDatabase_Schema-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"kind":"internalParam","text":"originalStart"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"copyForStartingAt"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newStartPoint"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This customization point allows databases to contain values which depend on their location within the database."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, one may wish to map the code-points 𝐀-𝐙 ("},{"code":"U+1D400 MATHEMATICAL BOLD CAPITAL A","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"code":"U+1D419 MATHEMATICAL BOLD CAPITAL Z","type":"codeVoice"},{"type":"text","text":") to the ASCII code-points A-Z. In that case, a single mapping entry"},{"type":"text","text":" "},{"type":"text","text":"could cover the entire space from 1D400 to 1D419, and when we look up the value for a scalar in that range,"},{"type":"text","text":" "},{"type":"text","text":"we would subtract the value from 1D400 to find its offset, and add it to the ASCII ‘A’"},{"type":"text","text":" "},{"type":"text","text":"in a kind of ‘rebase’ operation."}],"type":"paragraph"},{"inlineContent":[{"text":"Anyway, those kinds of values are sensitive to the exact range of code-points they are assigned to.","type":"text"},{"text":" ","type":"text"},{"text":"If we need to split an entry, we need to calculate an adjusted value for the split region, otherwise","type":"text"},{"text":" ","type":"text"},{"text":"we would loop and start rebasing from ‘A’ again. This function calculates those adjusted values.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The default behavior is to simply return "},{"type":"codeVoice","code":"data"},{"type":"text","text":". Most values do not care about their precise location"},{"type":"text","text":" "},{"type":"text","text":"in the database this way. If you don’t use the "},{"type":"codeVoice","code":"startCodePoint"},{"type":"text","text":" portion of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/CodePointDatabase\/LookupResult"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"you don’t need to care about this."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/unicodedatastructures\/idnavalidationdata\/unicodedata(_:at:copyforstartingat:)"]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","extendedModule":"UnicodeDataStructures","title":"unicodeData(_:at:copyForStartingAt:)","symbolKind":"method","modules":[{"name":"UnicodeDataStructures"}],"externalID":"s:21UnicodeDataStructures24CodePointDatabase_SchemaPAAE07unicodeB0_2at17copyForStartingAt0aB0QzAH_s6UInt32VAJtFZ::SYNTHESIZED::s:21UnicodeDataStructures014IDNAValidationB0V","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"copyForStartingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"}],"roleHeading":"Type Method"},"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","title":"UnicodeDataStructures","url":"\/documentation\/unicodedatastructures","type":"topic","kind":"symbol","abstract":[]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/CodePointDatabase/LookupResult":{"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/CodePointDatabase\/LookupResult","title":"CodePointDatabase.LookupResult","url":"\/documentation\/unicodedatastructures\/codepointdatabase\/lookupresult","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LookupResult"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LookupResult"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Schema"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CodePointDatabase_Schema"},{"type":"text","text":"."}]},"abstract":[]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAValidationData":{"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData","title":"IDNAValidationData","url":"\/documentation\/unicodedatastructures\/idnavalidationdata","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IDNAValidationData"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDNAValidationData"}],"abstract":[{"type":"text","text":"Data used to validate domain labels in IDNA."}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAValidationData/CodePointDatabase_Schema-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/CodePointDatabase_Schema-Implementations","title":"CodePointDatabase_Schema Implementations","url":"\/documentation\/unicodedatastructures\/idnavalidationdata\/codepointdatabase_schema-implementations","type":"topic","kind":"article","abstract":[]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAValidationData/unicodeData(_:at:copyForStartingAt:)":{"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/unicodeData(_:at:copyForStartingAt:)","title":"unicodeData(_:at:copyForStartingAt:)","url":"\/documentation\/unicodedatastructures\/idnavalidationdata\/unicodedata(_:at:copyforstartingat:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeData"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"copyForStartingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"(Optional) Returns a copy of the given non-ASCII data, adjusted to apply to a different start location."}]}}}