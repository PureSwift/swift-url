{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineSegments"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","kind":"typeIdentifier","text":"SegmentedLine"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","kind":"typeIdentifier","text":"Segments"},{"kind":"text","text":"."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","kind":"typeIdentifier","text":"SegmentedLine"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Segments","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:21UnicodeDataStructures13SegmentedLineV15combineSegments5whileySbSnyxG5range_q_5valuetz_AfG_q_AHttXE_tF","title":"combineSegments(while:)","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"UnicodeDataStructures"}],"extendedModule":"UnicodeDataStructures","role":"symbol"},"sections":[],"abstract":[{"type":"text","text":"Merges segments according to the given closure."}],"variants":[{"paths":["\/documentation\/unicodedatastructures\/segmentedline\/combinesegments(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combineSegments","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"shouldMerge","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","text":"Segments"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","text":"Element"},{"kind":"text","text":", "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","text":"SegmentedLine"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","text":"Segments"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function implements a left-fold, similar to Collection’s "},{"type":"codeVoice","code":"reduce"},{"type":"text","text":", except that the folding closure"},{"type":"text","text":" "},{"type":"text","text":"can decide to preserve a segment break and reset the fold operation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure is invoked with two segments as arguments - an "},{"code":"accumulator","type":"codeVoice"},{"type":"text","text":", which has a mutable value,"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"next","type":"codeVoice"},{"type":"text","text":", which is its successor on this line. Given these segments, the closure may decide:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To combine "},{"type":"codeVoice","code":"next"},{"type":"text","text":" and "},{"type":"codeVoice","code":"accumulator"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To fold segments, the closure performs any required adjustments to merge "},{"type":"codeVoice","code":"next.value"},{"type":"text","text":" "},{"type":"text","text":"in to "},{"type":"codeVoice","code":"accumulator.value"},{"type":"text","text":", and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The segment "},{"type":"codeVoice","code":"next"},{"type":"text","text":" will be discarded,"},{"type":"text","text":" "},{"type":"text","text":"and the accumulator’s range will expand up to "},{"type":"codeVoice","code":"next.range.upperBound"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Folding continues with the same accumulator for as long as the closure returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":";"},{"type":"text","text":" "},{"type":"text","text":"this process is similar to Collection’s "},{"type":"codeVoice","code":"reduce(into:)"},{"type":"text","text":" function."}]}]},{"content":[{"inlineContent":[{"text":"To maintain the segment break.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If it is not desirable to combine the segments, the closure may return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This finalizes the current accumulator, and restarts folding with ","type":"text"},{"code":"next","type":"codeVoice"},{"text":" as the new accumulator.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"kind":"symbol","references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/Segments-swift.struct":{"type":"topic","url":"\/documentation\/unicodedatastructures\/segmentedline\/segments-swift.struct","role":"symbol","navigatorTitle":[{"text":"Segments","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","kind":"symbol","title":"SegmentedLine.Segments","abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Segments","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/combineSegments(while:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineSegments"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","text":"Segments"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","text":"SegmentedLine"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","text":"Segments"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"url":"\/documentation\/unicodedatastructures\/segmentedline\/combinesegments(while:)","title":"combineSegments(while:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"text":"Merges segments according to the given closure.","type":"text"}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","title":"UnicodeDataStructures","url":"\/documentation\/unicodedatastructures","type":"topic","kind":"symbol","abstract":[]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"type":"topic","url":"\/documentation\/unicodedatastructures\/segmentedline","role":"symbol","navigatorTitle":[{"text":"SegmentedLine","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","kind":"symbol","title":"SegmentedLine","abstract":[{"text":"A ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" is a one-dimensional space, where every location is assigned a value.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"identifier"}]}}}