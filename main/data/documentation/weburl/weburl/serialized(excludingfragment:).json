{"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":"(","kind":"text"},{"text":"excludingFragment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = false) -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Whether the fragment should be omitted from the result. The default is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}],"name":"excludingFragment"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The serialization of a URL is defined by the URL Standard. This is the same serialization as is used"},{"type":"text","text":" "},{"type":"text","text":"when initializing a String from a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" value, printing a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":", or encoding a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let url: WebURL = ...","url.serialized()","String(url)      \/\/ Same as above.","print(url)       \/\/ Same as print(url.serialized())"]},{"type":"heading","anchor":"Idempotence","level":3,"text":"Idempotence"},{"type":"paragraph","inlineContent":[{"text":"The URL Standard ensures that the combination of parser, serializer, and API, guarantee idempotence.","type":"text"},{"text":" ","type":"text"},{"text":"This means that any ","type":"text"},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" value may be converted to a string (for example, in a log file or JSON)"},{"type":"text","text":" "},{"type":"text","text":"and re-parsed, and the result is guaranteed to be identical to the original "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func takesURLAsString(_ urlString: String) {","  \/\/ ✅ If `urlString` is a serialized WebURL, this is guaranteed","  \/\/    to reconstruct the value exactly.","  let reparsed = WebURL(urlString)","  assert(reparsed.serialized() == urlString)","}"]},{"type":"aside","name":"Tip","content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"In Swift terms, this means that WebURL is ","type":"text"},{"type":"codeVoice","code":"LosslessStringConvertible"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"tip"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"This may seem like an obvious feature, but not all URL libraries offer it.","type":"text"},{"text":" ","type":"text"},{"text":"Some libraries require special ","type":"text"},{"code":"normalize()","type":"codeVoice"},{"text":" functions, or that you enable a ‘relaxed’ parsing mode,","type":"text"},{"text":" ","type":"text"},{"text":"and some URL types have additional state which isn’t part of the serialization at all!","type":"text"}]}],"style":"note"}]}],"abstract":[{"text":"Returns the string representation of this URL.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"modules":[{"name":"WebURL"}],"symbolKind":"method","title":"serialized(excludingFragment:)","externalID":"s:6WebURLAAV10serialized17excludingFragmentSSSb_tF","extendedModule":"WebURL","role":"symbol","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)"},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)"]},{"generated":true,"title":"URL Strings","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(utf8:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(filePath:format:)"]}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/serialized(excludingfragment:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","url":"\/documentation\/weburl\/weburl\/init(_:)","role":"symbol","title":"init(_:)","abstract":[{"text":"Create a URL from a string.","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","role":"collection","title":"WebURL","kind":"symbol","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(utf8:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(utf8:)","url":"\/documentation\/weburl\/weburl\/init(utf8:)","role":"symbol","title":"init(utf8:)","abstract":[{"text":"Create a URL from a string, expressed as UTF-8 bytes.","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"url":"\/documentation\/weburl\/weburl","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(filePath:format:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(filePath:format:)","url":"\/documentation\/weburl\/weburl\/init(filepath:format:)","role":"symbol","title":"init(filePath:format:)","abstract":[{"text":"Create a URL representation of a file path string.","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/serialized(excludingFragment:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","url":"\/documentation\/weburl\/weburl\/serialized(excludingfragment:)","role":"symbol","title":"serialized(excludingFragment:)","abstract":[{"text":"Returns the string representation of this URL.","type":"text"}],"type":"topic","kind":"symbol"}}}