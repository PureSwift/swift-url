{"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:6WebURLAAV6DomainV4utf8ADSgx_tcSKRzs5UInt8V7ElementRtzlufc","role":"symbol","symbolKind":"init","extendedModule":"WebURL","roleHeading":"Initializer","modules":[{"name":"WebURL"}],"title":"init(utf8:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BidirectionalCollection","preciseIdentifier":"s:SK"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"utf8","content":[{"inlineContent":[{"text":"The string to parse, as a collection of UTF-8 code-units.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer constructs a "},{"type":"codeVoice","code":"Domain"},{"type":"text","text":" from raw UTF-8 bytes rather than requiring"},{"type":"text","text":" "},{"type":"text","text":"they be stored as a "},{"type":"codeVoice","code":"String"},{"type":"text","text":". It uses precisely the same parsing algorithm as "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example demonstrates loading a file as a Foundation "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" object, and parsing each line"},{"type":"text","text":" "},{"type":"text","text":"as a domain directly from the binary text. Doing this saves allocating a String and UTF-8 validation."},{"type":"text","text":" "},{"type":"text","text":"Domains containing non-ASCII bytes are subject to IDNA compatibility processing, which also"},{"type":"text","text":" "},{"type":"text","text":"ensures that the contents are valid UTF-8."}]},{"type":"codeListing","code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let domain = WebURL.Domain(utf8: lineBytes)","  ...","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This API is a useful shorthand when parsing hostnames which "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be a domain, and no other kind of host."},{"type":"text","text":" "},{"type":"text","text":"For parsing general hostname strings, developers are encouraged to invoke the full URL host parser via"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)"},{"type":"text","text":" instead. It returns a "},{"type":"codeVoice","code":"Domain"},{"type":"text","text":" value"},{"type":"text","text":" "},{"type":"text","text":"if the hostname is a domain, but it also supports other kinds of hosts as well."}]}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain"]]},"abstract":[{"text":"Parses a domain from a collection of UTF-8 code-units.","type":"text"}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/domain\/init(utf8:)"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"],"generated":true,"title":"Parsing a Domain"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)"},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(utf8:)":{"type":"topic","url":"\/documentation\/weburl\/weburl\/domain\/init(utf8:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Parses a domain from a collection of UTF-8 code-units."}],"title":"init(utf8:)"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","role":"collection","title":"WebURL","kind":"symbol","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(utf8:scheme:)":{"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","kind":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)","title":"init(utf8:scheme:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Parses a hostname string from a collection of UTF-8 code-units.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(_:)":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/weburl\/weburl\/domain\/init(_:)","title":"init(_:)","role":"symbol","abstract":[{"type":"text","text":"Parses a domain from a String."}],"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain":{"role":"symbol","navigatorTitle":[{"text":"Domain","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Domain","kind":"identifier"}],"url":"\/documentation\/weburl\/weburl\/domain","abstract":[{"text":"A domain is a non-empty ASCII string which identifies a realm within a network.","type":"text"}],"title":"WebURL.Domain"}}}