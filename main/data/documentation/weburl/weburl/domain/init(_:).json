{"metadata":{"externalID":"s:6WebURLAAV6DomainVyADSgxcSyRzlufc","role":"symbol","modules":[{"name":"WebURL"}],"extendedModule":"WebURL","roleHeading":"Initializer","title":"init(_:)","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}]},"abstract":[{"text":"Parses a domain from a String.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Parsing a Domain","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain"],["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/LosslessStringConvertible-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/weburl\/weburl\/domain\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sy","kind":"typeIdentifier","text":"StringProtocol"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"string","content":[{"type":"paragraph","inlineContent":[{"text":"The string to parse.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This initializer invokes the general "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","isActive":true},{"type":"text","text":" parser in the context of an HTTP URL,"},{"type":"text","text":" "},{"type":"text","text":"and succeeds only if the parser considers the string to represent an allowed domain."}],"type":"paragraph"},{"syntax":"swift","code":["WebURL.Domain(\"example.com\")  \/\/ ✅ \"example.com\"","WebURL.Domain(\"EXAMPLE.com\")  \/\/ ✅ \"example.com\"","WebURL.Domain(\"localhost\")    \/\/ ✅ \"localhost\"","","WebURL.Domain(\"api.أهلا.com\")  \/\/ ✅ \"api.xn--igbi0gl.com\"","WebURL.Domain(\"xn--caf-dma\")  \/\/ ✅ \"xn--caf-dma\" (\"café\")","","WebURL.Domain(\"in valid\")     \/\/ ✅ nil (spaces are not allowed)","WebURL.Domain(\"xn--cafe-yvc\") \/\/ ✅ nil (invalid IDN)","WebURL.Domain(\"192.168.0.1\")  \/\/ ✅ nil (not a domain)","WebURL.Domain(\"[::1]\")        \/\/ ✅ nil (not a domain)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This API is a useful shorthand when parsing hostnames which "},{"type":"strong","inlineContent":[{"text":"must","type":"text"}]},{"type":"text","text":" be a domain, and no other kind of host."},{"type":"text","text":" "},{"type":"text","text":"For parsing general hostname strings, developers are encouraged to invoke the full URL host parser via"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","isActive":true},{"type":"text","text":" instead. It returns a "},{"type":"codeVoice","code":"Domain"},{"type":"text","text":" value"},{"type":"text","text":" "},{"type":"text","text":"if the hostname is a domain, but it also supports other kinds of hosts as well."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(_:scheme:)":{"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","kind":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(_:scheme:)","title":"init(_:scheme:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Parses a hostname in the context of a given URL scheme.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(_:)":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/weburl\/weburl\/domain\/init(_:)","title":"init(_:)","role":"symbol","abstract":[{"type":"text","text":"Parses a domain from a String."}],"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/LosslessStringConvertible-Implementations":{"type":"topic","url":"\/documentation\/weburl\/weburl\/domain\/losslessstringconvertible-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/LosslessStringConvertible-Implementations","abstract":[],"title":"LosslessStringConvertible Implementations"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum":{"url":"\/documentation\/weburl\/weburl\/host-swift.enum","kind":"symbol","abstract":[{"text":"A host, as interpreted by the URL Standard. A host is a network address or opaque identifier.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","type":"topic","title":"WebURL.Host","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Host","kind":"identifier"}],"navigatorTitle":[{"text":"Host","kind":"identifier"}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","role":"collection","title":"WebURL","kind":"symbol","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain":{"role":"symbol","navigatorTitle":[{"text":"Domain","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Domain","kind":"identifier"}],"url":"\/documentation\/weburl\/weburl\/domain","abstract":[{"text":"A domain is a non-empty ASCII string which identifies a realm within a network.","type":"text"}],"title":"WebURL.Domain"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(utf8:)":{"type":"topic","url":"\/documentation\/weburl\/weburl\/domain\/init(utf8:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Parses a domain from a collection of UTF-8 code-units."}],"title":"init(utf8:)"}}}