{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"WebURL"}],"externalID":"s:6WebURLAAV6originAB6OriginVvp","extendedModule":"WebURL","role":"symbol","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"origin"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier","text":"WebURL"},{"kind":"text","text":"."},{"preciseIdentifier":"s:6WebURLAAV6OriginV","kind":"typeIdentifier","text":"Origin"}],"symbolKind":"property","title":"origin"},"seeAlsoSections":[{"generated":true,"title":"Host and Origin","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/host-swift.property"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"origin"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","text":"WebURL"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Origin-swift.struct","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV6OriginV","text":"Origin"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Origins are the fundamental currency of web security. Two actors on the Web platform that share an origin are","type":"text"},{"text":" ","type":"text"},{"text":"assumed to trust each other and to have the same authority. Actors with differing origins are","type":"text"},{"text":" ","type":"text"},{"text":"considered potentially hostile versus each other, and are isolated from each other to varying degrees.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To check if two URLs have the same origin, compare their origin properties using the ","type":"text"},{"type":"codeVoice","code":"=="},{"text":" operator.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let urlA = WebURL(\"https:\/\/example.com\/foo\")!","let urlB = WebURL(\"https:\/\/github.com\/karwa\/swift-url\")!","","guard urlA.origin == urlB.origin else {","  \/\/ Cross-origin access rejected:","  \/\/ 'example.com' is not same-origin with 'github.com'.","}"]},{"text":"Known and Opaque Origins","anchor":"Known-and-Opaque-Origins","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A URL may have one of two types of origins, depending on its ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/scheme","isActive":true,"type":"reference"},{"text":" and whether that scheme establishes","type":"text"},{"text":" ","type":"text"},{"text":"an authority context. Origins of URLs known to the standard are internal tuples, consisting of","type":"text"},{"text":" ","type":"text"},{"text":"their (scheme, ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/hostname","isActive":true,"type":"reference"},{"text":", and ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/port","isActive":true,"type":"reference"},{"text":"). Origins of other URLs are known as ","type":"text"},{"inlineContent":[{"text":"opaque","type":"text"}],"type":"strong"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If a URL has an opaque origin, it means that no obvious domain of trust can be established from the URL","type":"text"},{"text":" ","type":"text"},{"text":"according to the standard. The ","type":"text"},{"identifier":"https:\/\/html.spec.whatwg.org\/multipage\/origin.html#concept-origin-opaque","type":"reference","isActive":true},{"text":" describes such an origin as","type":"text"},{"text":" ","type":"text"},{"text":"“an internal value […] for which the only meaningful operation is testing for equality”.","type":"text"}]},{"header":"row","type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Schemes"}]}],[{"type":"paragraph","inlineContent":[{"text":"Example","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Origin","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"http(s), ws(s),ftp"}]}],[{"type":"paragraph","inlineContent":[{"code":"http:\/\/user@example.com","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"text":"(http, example.com, 80)","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"blob*","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"blob:http:\/\/user@example.com"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"(http, example.com, 80)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"file"}]}],[{"type":"paragraph","inlineContent":[{"code":"file:\/\/\/usr\/bin\/swift","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"text":"Opaque","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"everything else"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"my.app:\/settings\/language"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Opaque"}]}]]]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"* if it has an opaque path containing another URL","type":"text"}],"type":"emphasis"}]},{"type":"paragraph","inlineContent":[{"text":"An opaque origin does ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"strong"},{"text":" not mean “not present” or “empty” in the sense that ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values do,","type":"text"},{"text":" ","type":"text"},{"text":"as two ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":"s are considered equal to each other. Opaque origins are ","type":"text"},{"inlineContent":[{"type":"text","text":"undefined"}],"type":"emphasis"},{"text":" security domains;","type":"text"},{"text":" ","type":"text"},{"text":"they must be considered ","type":"text"},{"inlineContent":[{"text":"not equal","type":"text"}],"type":"strong"},{"text":" to any other origin, and be maximally isolated.","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"This indeed means that opaque origins do not compare as "},{"code":"==","type":"codeVoice"},{"type":"text","text":" with themselves."}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"},{"text":"Custom Origin-like Concepts","anchor":"Custom-Origin-like-Concepts","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Despite there being URLs which the standard cannot compute security domains for,","type":"text"},{"text":" ","type":"text"},{"text":"an application or library is free to augment that knowledge to establish its own origin-like concept","type":"text"},{"text":" ","type":"text"},{"text":"for isolating domains of trust from one another:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["enum SecurityDomain {","","  \/\/\/ Security domain is 'obvious' due to URL scheme","  \/\/\/ being known by the standard.","  case derivedFromURL(WebURL.Origin)","","  \/\/\/ A security domain which has been established","  \/\/\/ by application-specific logic.","  case applicationDefined(MyApp.RealmOfTrust)","","  \/\/\/ Opaque origin, unable to determine a security domain.","  \/\/\/ These must be maximally isolated from each other.","  case undefinedOpaque","","  \/\/\/ Checks whether two security domains are considered equivalent.","  static func == (lhs: Self, rhs: Self) -> Bool {","    switch (lhs, rhs) {","    case (.derivedFromURL(let lhsOrigin), .derivedFromURL(let rhsOrigin)):","      return lhsOrigin == rhsOrigin","    case (.applicationDefined(let lhsRealm), .applicationDefined(let rhsRealm)):","      return lhsRealm == rhsRealm","    default:","      return false","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"text":"When designing such a type, it may be helpful to read ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/tools.ietf.org\/html\/rfc6454"},{"text":" ","type":"text"},{"text":"for a holistic understanding of how the web’s origin-based security model works.","type":"text"}]},{"text":"Origins in Hash Tables","anchor":"Origins-in-Hash-Tables","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because opaque origins do not compare as "},{"type":"codeVoice","code":"=="},{"type":"text","text":" with themselves, it is "},{"type":"strong","inlineContent":[{"text":"strongly","type":"text"}]},{"type":"text","text":" advised that you"},{"type":"text","text":" "},{"type":"text","text":"do not store them in hash tables such as "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Set"},{"type":"text","text":". Doing so is not meaningful"},{"type":"text","text":" "},{"type":"text","text":"and will degrade the table’s performance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is, however, perfectly fine to store "},{"type":"strong","inlineContent":[{"type":"text","text":"non-opaque"}]},{"type":"text","text":" origins in these types."}]},{"syntax":"swift","type":"codeListing","code":["var allowedOrigins: Set<WebURL.Origin> = []","","let opaqueOrigin = WebURL(\"file:\/\/\/usr\/bin\/swift\")!.origin","allowedOrigins.insert(opaqueOrigin)","allowedOrigins.contains(opaqueOrigin) \/\/ ❗️ False.","","let knownOrigin = WebURL(\"https:\/\/example.com\/foo\")!.origin","allowedOrigins.insert(knownOrigin)","allowedOrigins.contains(knownOrigin) \/\/ ✅ True."]}]}],"topicSections":[{"title":"Checking If an Origin Is Opaque","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Origin-swift.struct\/isOpaque"]},{"title":"Obtaining an Origin’s String Representation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Origin-swift.struct\/serialized"]},{"title":"Origin Type","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Origin-swift.struct"]}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/origin-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/origin-swift.property"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"abstract":[{"text":"The domain of trust this URL belongs to, according to the web’s security model.","type":"text"}],"kind":"symbol","references":{"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","role":"collection","title":"WebURL","kind":"symbol","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum":{"url":"\/documentation\/weburl\/weburl\/host-swift.enum","kind":"symbol","abstract":[{"text":"A host, as interpreted by the URL Standard. A host is a network address or opaque identifier.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","type":"topic","title":"WebURL.Host","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Host","kind":"identifier"}],"navigatorTitle":[{"text":"Host","kind":"identifier"}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Origin-swift.struct":{"type":"topic","abstract":[{"text":"A URL’s Origin is the domain of trust that it belongs to, according to the web’s security model.","type":"text"}],"navigatorTitle":[{"text":"Origin","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Origin-swift.struct","url":"\/documentation\/weburl\/weburl\/origin-swift.struct","role":"symbol","title":"WebURL.Origin","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Origin","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/origin-swift.property":{"type":"topic","abstract":[{"text":"The domain of trust this URL belongs to, according to the web’s security model.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/origin-swift.property","url":"\/documentation\/weburl\/weburl\/origin-swift.property","role":"symbol","title":"origin","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"origin","kind":"identifier"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Origin","preciseIdentifier":"s:6WebURLAAV6OriginV","kind":"typeIdentifier"}]},"https://html.spec.whatwg.org/multipage/origin.html#concept-origin-opaque":{"url":"https:\/\/html.spec.whatwg.org\/multipage\/origin.html#concept-origin-opaque","titleInlineContent":[{"text":"HTML Standard","type":"text"}],"identifier":"https:\/\/html.spec.whatwg.org\/multipage\/origin.html#concept-origin-opaque","type":"link","title":"HTML Standard"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Origin-swift.struct/serialized":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/weburl\/weburl\/origin-swift.struct\/serialized","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Origin-swift.struct\/serialized","role":"symbol","type":"topic","abstract":[{"text":"The string representation of this origin.","type":"text"}],"kind":"symbol","title":"serialized"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/hostname":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/hostname","abstract":[{"text":"The serialization of this URL’s host.","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hostname","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","title":"hostname","url":"\/documentation\/weburl\/weburl\/hostname"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/host-swift.property":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WebURL","preciseIdentifier":"s:6WebURLAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Host","preciseIdentifier":"s:6WebURLAAV4HostO"},{"kind":"text","text":"?"}],"url":"\/documentation\/weburl\/weburl\/host-swift.property","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/host-swift.property","role":"symbol","type":"topic","abstract":[{"text":"The host of this URL, as interpreted by the standard.","type":"text"}],"kind":"symbol","title":"host"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/port":{"url":"\/documentation\/weburl\/weburl\/port","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/port","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"port","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?"}],"title":"port","role":"symbol","type":"topic","abstract":[{"text":"The port number of this URL.","type":"text"}]},"https://tools.ietf.org/html/rfc6454":{"url":"https:\/\/tools.ietf.org\/html\/rfc6454","titleInlineContent":[{"text":"RFC-6456 (“The Web Origin Concept”)","type":"text"}],"identifier":"https:\/\/tools.ietf.org\/html\/rfc6454","type":"link","title":"RFC-6456 (“The Web Origin Concept”)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/scheme":{"url":"\/documentation\/weburl\/weburl\/scheme","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/scheme","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"scheme","role":"symbol","type":"topic","abstract":[{"text":"The scheme of this URL, for example ","type":"text"},{"type":"codeVoice","code":"https"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"file"},{"text":".","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"url":"\/documentation\/weburl\/weburl","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Origin-swift.struct/isOpaque":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isOpaque"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/weburl\/weburl\/origin-swift.struct\/isopaque","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Origin-swift.struct\/isOpaque","role":"symbol","type":"topic","abstract":[{"text":"Whether this is an opaque origin, i.e. an undefined security domain.","type":"text"}],"kind":"symbol","title":"isOpaque"}}}