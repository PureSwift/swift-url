{"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)"],"title":"Parsing a Host from a String and Context"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BidirectionalCollection","preciseIdentifier":"s:SK","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"utf8","content":[{"inlineContent":[{"text":"The string to parse, as a collection of UTF-8 code-units.","type":"text"}],"type":"paragraph"}]},{"name":"scheme","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The URL scheme which provides the context for interpreting the given string."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This initializer constructs a ","type":"text"},{"code":"Host","type":"codeVoice"},{"text":" from raw UTF-8 bytes rather than requiring","type":"text"},{"text":" ","type":"text"},{"text":"they be stored as a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":". It uses precisely the same parsing algorithm as ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following example demonstrates loading a file as a Foundation ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" object, and parsing each line","type":"text"},{"text":" ","type":"text"},{"text":"as a host directly from the binary text. Doing this saves allocating a String and UTF-8 validation.","type":"text"},{"text":" ","type":"text"},{"text":"Hosts which are interpreted as containing Unicode text are transformed to ASCII via","type":"text"},{"text":" ","type":"text"},{"text":"IDNA compatibility processing, which performs its own UTF-8 validation.","type":"text"}]},{"code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let host = WebURL.Host(utf8: lineBytes, scheme: \"http\")","  ...","}"],"type":"codeListing","syntax":"swift"}]}],"metadata":{"modules":[{"name":"WebURL"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scheme","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init","role":"symbol","externalID":"s:6WebURLAAV4HostO4utf86schemeADSgx_SStcSKRzs5UInt8V7ElementRtzlufc","extendedModule":"WebURL","title":"init(utf8:scheme:)"},"abstract":[{"text":"Parses a hostname string from a collection of UTF-8 code-units.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(_:scheme:)":{"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","kind":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(_:scheme:)","title":"init(_:scheme:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Parses a hostname in the context of a given URL scheme.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"url":"\/documentation\/weburl\/weburl","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","role":"collection","title":"WebURL","kind":"symbol","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(utf8:scheme:)":{"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","kind":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)","title":"init(utf8:scheme:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Parses a hostname string from a collection of UTF-8 code-units.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum":{"url":"\/documentation\/weburl\/weburl\/host-swift.enum","kind":"symbol","abstract":[{"text":"A host, as interpreted by the URL Standard. A host is a network address or opaque identifier.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","type":"topic","title":"WebURL.Host","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Host","kind":"identifier"}],"navigatorTitle":[{"text":"Host","kind":"identifier"}],"role":"symbol"}}}