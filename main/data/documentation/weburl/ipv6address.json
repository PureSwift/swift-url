{"metadata":{"externalID":"s:6WebURL11IPv6AddressV","modules":[{"name":"WebURL"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IPv6Address"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IPv6Address"}],"title":"IPv6Address","symbolKind":"struct"},"variants":[{"paths":["\/documentation\/weburl\/ipv6address"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL"]]},"relationshipsSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","doc:\/\/com.karwa.WebURL\/Se","doc:\/\/com.karwa.WebURL\/SE","doc:\/\/com.karwa.WebURL\/SQ","doc:\/\/com.karwa.WebURL\/SH","doc:\/\/com.karwa.WebURL\/s25LosslessStringConvertibleP","doc:\/\/com.karwa.WebURL\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address"],"generated":true,"title":"Network Hosts"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv6Address","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Construct an "},{"type":"codeVoice","code":"IPv6Address"},{"type":"text","text":" initializing a value with an IP address string."},{"type":"text","text":" "},{"type":"text","text":"Parsing is defined by the URL Standard, and supports all of the shorthands described by"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc4291#section-2.2"},{"type":"text","text":" - “IP Version 6 Addressing Architecture\/\/Text Representation of Addresses”,"},{"type":"text","text":" "},{"type":"text","text":"such as compressed pieces and embedded IPv4 addresses."}]},{"type":"codeListing","syntax":"swift","code":["IPv6Address(\"2001:0:ce49:7601:e866:efff:62c3:fffe\")! \/\/ ✅ Full address","IPv6Address(\"2608::3:5\")!                            \/\/ ✅ Compressed address","IPv6Address(\"::192.168.0.1\")!                        \/\/ ✅ Embedded IPv4 address","","\/\/ Or you can initialize from bytes\/pieces directly.","IPv6Address(octets: (0x26, 0x08, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x03, 0, 0x05))","IPv6Address(pieces: (0x2608, 0, 0, 0, 0, 0, 0x03, 0x05), .numeric)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To obtain an address’ string representation, use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/serialized"},{"type":"text","text":" property or simply initialize a "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This serialization conforms to "},{"type":"reference","isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc5952"},{"type":"text","text":" - “A Recommendation for IPv6 Address Text Representation”,"},{"type":"text","text":" "},{"type":"text","text":"so it makes use of compressed notation and normalizes to lowercase."}]},{"type":"codeListing","syntax":"swift","code":["let address1 = IPv6Address(\"2001:0:CE49:7601:E866:EFFF:62C3:FFFE\")!","address1.serialized  \/\/ ✅ \"2001:0:ce49:7601:e866:efff:62c3:fffe\"","String(address1)     \/\/ Same as above.","","let address2 = IPv6Address(\"2608:0:0:0::3:5\")!","address2.serialized  \/\/ ✅ \"2608::3:5\"","String(address2)     \/\/ Same as above."]},{"type":"heading","level":3,"text":"Connecting to an Address","anchor":"Connecting-to-an-Address"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The thing you’ll most likely want to do with an IP address is connect to it, by converting to either C’s "},{"code":"in6_addr","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"or NIO’s "},{"code":"SocketAddress","type":"codeVoice"},{"type":"text","text":". To do so, use the "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/octets-swift.property","type":"reference"},{"type":"text","text":" property to access the address’ raw bytes"},{"type":"text","text":" "},{"type":"text","text":"and copy them to the destination."}]},{"type":"codeListing","syntax":"swift","code":["let address = IPv6Address()","","\/\/ Converting to C's in6_addr:","var c_address = in6_addr()","withUnsafeBytes(of: address.octets) { addressBytes in","  withUnsafeMutableBytes(of: &c_address) { $0.copyMemory(from: addressBytes) }","}","","\/\/ Creating an NIO SocketAddress:","let nioAddress = withUnsafeByes(of: address.octets) { addressBytes in","  let buffer = ByteBuffer(bytes: addressBytes)","  return try! SocketAddress(packedIPAddress: buffer, port: \/* Your choice *\/)","}"]},{"type":"heading","level":3,"text":"Reading or Modifying an Address","anchor":"Reading-or-Modifying-an-Address"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/octets-swift.property"},{"type":"text","text":" property allows you to read and modify the address’ raw bytes (or “octets”)."},{"type":"text","text":" "},{"type":"text","text":"This can be useful if you’re performing filtering or masking, or other low-level networking operations."},{"type":"text","text":" "},{"type":"text","text":"It is preferred to work with IP addresses in terms of octets."}]},{"type":"codeListing","syntax":"swift","code":["var address = IPv6Address(\"2001:0:ce49:7601:e866:efff:62c3:fffe\")!","address.octets.0  \/\/  32, 0x20","address.octets.1  \/\/   1, 0x01","address.octets.4  \/\/ 206, 0xCE","address.octets.5  \/\/  73, 0x49","","address.octets.4 = 0xFA","address.octets.5 = 0xCE","print(address)","\/\/ ✅ \"2001:0:face:7601:e866:efff:62c3:fffe\"","\/\/            ^^^^"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/subscript(pieces:)","type":"reference"},{"text":" subscript allows you to read and modify the address’ octets as 16-bit integers.","type":"text"},{"text":" ","type":"text"},{"text":"There are two ways to view the address at units larger than an octet - either as ","type":"text"},{"inlineContent":[{"type":"text","text":"binary data"}],"type":"strong"},{"text":" ","type":"text"},{"text":"for copying to\/from memory, or ","type":"text"},{"inlineContent":[{"type":"text","text":"numeric integers"}],"type":"strong"},{"text":", whose values are what you see when printing the address","type":"text"},{"text":" ","type":"text"},{"text":"as a string.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These correspond to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/binary"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/numeric"},{"type":"text","text":" views of the address."}]},{"type":"codeListing","syntax":"swift","code":["var address = IPv6Address(\"2001:0:ce49:7601:e866:efff:62c3:fffe\")!","","\/\/ Use numeric pieces to read or write numeric integers or literals.","address[pieces: .numeric].0 = 0xFEED","address[pieces: .numeric].1 = 0xBEEF","print(address)","\/\/ ✅ \"feed:beef:ce49:7601:e866:efff:62c3:fffe\"","\/\/     ^^^^ ^^^^","","\/\/ Binary pieces should only be used when copying to\/from memory.","address[pieces: .binary].0 = 0xFEED","address[pieces: .binary].1 = 0xBEEF","print(address)","\/\/ ❌ \"edfe:efbe:ce49:7601:e866:efff:62c3:fffe\"","\/\/     ^^^^ ^^^^ - Where's the beef?!"]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"This type does not support Zone-IDs, as URLs themselves do not support Zone-IDs."}]}],"name":"Note","style":"note"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"A 128-bit numerical identifier assigned to a device on an ","type":"text"},{"type":"reference","identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","isActive":true},{"text":" network.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(utf8:)"],"title":"Parsing an Address from a String"},{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/serialized"],"title":"Obtaining an Address’ String Representation"},{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(octets:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/octets-swift.property"],"title":"Addresses as Bytes"},{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(pieces:_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/subscript(pieces:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement"],"title":"Addresses as 16-bit Integer Pieces"},{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Octets-swift.typealias","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Pieces"],"title":"Type Aliases"},{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/CustomStringConvertible-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Decodable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Encodable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Equatable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Hashable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/LosslessStringConvertible-Implementations"],"generated":true,"title":"Default Implementations"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(_:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/weburl\/ipv6address\/init(_:)","abstract":[{"text":"Parses an IPv6 address string.","type":"text"}],"title":"init(_:)"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address":{"role":"symbol","navigatorTitle":[{"text":"IPv4Address","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv4Address","kind":"identifier"}],"url":"\/documentation\/weburl\/ipv4address","abstract":[{"text":"A 32-bit numerical identifier assigned to a device on an ","type":"text"},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc791","type":"reference","isActive":true},{"text":" network.","type":"text"}],"title":"IPv4Address"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/LosslessStringConvertible-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/LosslessStringConvertible-Implementations","url":"\/documentation\/weburl\/ipv6address\/losslessstringconvertible-implementations","abstract":[],"title":"LosslessStringConvertible Implementations"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/octets-swift.property":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/octets-swift.property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"octets","kind":"identifier"},{"text":": ","kind":"text"},{"text":"IPv6Address","preciseIdentifier":"s:6WebURL11IPv6AddressV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Octets","preciseIdentifier":"s:6WebURL11IPv6AddressV6Octetsa","kind":"typeIdentifier"}],"url":"\/documentation\/weburl\/ipv6address\/octets-swift.property","abstract":[{"text":"The octets of this address.","type":"text"}],"title":"octets"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(octets:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(octets:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"octets","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IPv6Address","preciseIdentifier":"s:6WebURL11IPv6AddressV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Octets","preciseIdentifier":"s:6WebURL11IPv6AddressV6Octetsa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/weburl\/ipv6address\/init(octets:)","abstract":[{"text":"Creates an address from its raw octets.","type":"text"}],"title":"init(octets:)"},"doc://com.karwa.WebURL/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(pieces:_:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(pieces:_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"pieces","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IPv6Address","preciseIdentifier":"s:6WebURL11IPv6AddressV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pieces","preciseIdentifier":"s:6WebURL11IPv6AddressV6Piecesa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"OctetArrangement","preciseIdentifier":"s:6WebURL16OctetArrangementO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/weburl\/ipv6address\/init(pieces:_:)","abstract":[{"text":"Creates an address from 16-bit integer pieces.","type":"text"}],"title":"init(pieces:_:)"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/Octets-swift.typealias":{"role":"symbol","navigatorTitle":[{"text":"Octets","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Octets-swift.typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Octets","kind":"identifier"}],"url":"\/documentation\/weburl\/ipv6address\/octets-swift.typealias","abstract":[],"title":"IPv6Address.Octets"},"https://tools.ietf.org/html/rfc5952":{"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc5952","url":"https:\/\/tools.ietf.org\/html\/rfc5952","title":"RFC 5952","titleInlineContent":[{"text":"RFC 5952","type":"text"}]},"doc://com.karwa.WebURL/SH":{"type":"unresolvable","identifier":"doc:\/\/com.karwa.WebURL\/SH","title":"Swift.Hashable"},"https://tools.ietf.org/html/rfc2460":{"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","url":"https:\/\/tools.ietf.org\/html\/rfc2460","title":"Internet Protocol, version 6","titleInlineContent":[{"text":"Internet Protocol, version 6","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain":{"role":"symbol","navigatorTitle":[{"text":"Domain","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Domain","kind":"identifier"}],"url":"\/documentation\/weburl\/weburl\/domain","abstract":[{"text":"A domain is a non-empty ASCII string which identifies a realm within a network.","type":"text"}],"title":"WebURL.Domain"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/Equatable-Implementations":{"url":"\/documentation\/weburl\/ipv6address\/equatable-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","role":"collectionGroup"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/Decodable-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Decodable-Implementations","url":"\/documentation\/weburl\/ipv6address\/decodable-implementations","abstract":[],"title":"Decodable Implementations"},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement":{"role":"symbol","navigatorTitle":[{"text":"OctetArrangement","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OctetArrangement","kind":"identifier"}],"url":"\/documentation\/weburl\/octetarrangement","abstract":[{"text":"The way in which binary data is interpreted as an integer.","type":"text"}],"title":"OctetArrangement"},"doc://com.karwa.WebURL/SE":{"type":"unresolvable","identifier":"doc:\/\/com.karwa.WebURL\/SE","title":"Swift.Encodable"},"doc://com.karwa.WebURL/s25LosslessStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.karwa.WebURL\/s25LosslessStringConvertibleP","title":"Swift.LosslessStringConvertible"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","role":"collection","title":"WebURL","kind":"symbol","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement/binary":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/binary","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binary","kind":"identifier"}],"url":"\/documentation\/weburl\/octetarrangement\/binary","abstract":[{"text":"Integer pieces larger than an octet have a consistent byte sequence on all machines.","type":"text"}],"title":"OctetArrangement.binary"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/Pieces":{"role":"symbol","navigatorTitle":[{"text":"Pieces","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Pieces","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pieces","kind":"identifier"}],"url":"\/documentation\/weburl\/ipv6address\/pieces","abstract":[],"title":"IPv6Address.Pieces"},"https://tools.ietf.org/html/rfc4291#section-2.2":{"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc4291#section-2.2","url":"https:\/\/tools.ietf.org\/html\/rfc4291#section-2.2","title":"Section 2.2 of RFC 4291","titleInlineContent":[{"text":"Section 2.2 of RFC 4291","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/CustomStringConvertible-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/CustomStringConvertible-Implementations","url":"\/documentation\/weburl\/ipv6address\/customstringconvertible-implementations","abstract":[],"title":"CustomStringConvertible Implementations"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/subscript(pieces:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/subscript(pieces:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"pieces","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"OctetArrangement","preciseIdentifier":"s:6WebURL16OctetArrangementO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"IPv6Address","preciseIdentifier":"s:6WebURL11IPv6AddressV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pieces","preciseIdentifier":"s:6WebURL11IPv6AddressV6Piecesa","kind":"typeIdentifier"}],"url":"\/documentation\/weburl\/ipv6address\/subscript(pieces:)","abstract":[{"text":"The octets of this address, combined in to 16-bit integer pieces.","type":"text"}],"title":"subscript(pieces:)"},"https://tools.ietf.org/html/rfc791":{"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc791","url":"https:\/\/tools.ietf.org\/html\/rfc791","title":"Internet Protocol, version 4","titleInlineContent":[{"text":"Internet Protocol, version 4","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement/numeric":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/numeric","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"numeric","kind":"identifier"}],"url":"\/documentation\/weburl\/octetarrangement\/numeric","abstract":[{"text":"Integer pieces larger than an octet have a consistent numeric value on all machines.","type":"text"}],"title":"OctetArrangement.numeric"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address":{"url":"\/documentation\/weburl\/ipv6address","kind":"symbol","abstract":[{"text":"A 128-bit numerical identifier assigned to a device on an ","type":"text"},{"type":"reference","identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","isActive":true},{"text":" network.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address","type":"topic","title":"IPv6Address","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv6Address","kind":"identifier"}],"navigatorTitle":[{"text":"IPv6Address","kind":"identifier"}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/Encodable-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Encodable-Implementations","url":"\/documentation\/weburl\/ipv6address\/encodable-implementations","abstract":[],"title":"Encodable Implementations"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(utf8:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(utf8:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/weburl\/ipv6address\/init(utf8:)","abstract":[{"text":"Parses an IPv6 address string from a collection of UTF-8 code-units.","type":"text"}],"title":"init(utf8:)"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/serialized":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/serialized","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/weburl\/ipv6address\/serialized","abstract":[{"text":"The canonical textual representation of this address.","type":"text"}],"title":"serialized"},"doc://com.karwa.WebURL/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.karwa.WebURL\/s8SendableP","title":"Swift.Sendable"},"doc://com.karwa.WebURL/Se":{"type":"unresolvable","identifier":"doc:\/\/com.karwa.WebURL\/Se","title":"Swift.Decodable"},"doc://com.karwa.WebURL/SQ":{"type":"unresolvable","identifier":"doc:\/\/com.karwa.WebURL\/SQ","title":"Swift.Equatable"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/Hashable-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/Hashable-Implementations","url":"\/documentation\/weburl\/ipv6address\/hashable-implementations","abstract":[],"title":"Hashable Implementations"}}}